definitions:
  go_base_api.JSONResult:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  go_vault.JSONResult:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  go_vault.VaultUser:
    properties:
      email:
        type: string
      grope_names:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
info:
  contact:
    email: admin@mail.ru
    name: API Support
    url: https://jira.url
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://sample.url
paths:
  /env:
    get:
      consumes:
      - application/json
      description: Internal method
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
      summary: Show config for service
      tags:
      - internal
  /health:
    get:
      consumes:
      - application/json
      description: Internal method
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
      summary: Health check
      tags:
      - internal
  /info:
    get:
      consumes:
      - application/json
      description: Internal method
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_base_api.JSONResult'
      summary: Show config for service
      tags:
      - internal
  /vault/api/v1/getAllAppRolesToken:
    put:
      consumes:
      - application/json
      description: Method generate all user vault token  for vlid vault approles by
        user groups
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/go_vault.VaultUser'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
      summary: Generate all tokens for user
      tags:
      - vault
  /vault/api/v1/getAppRoleToken:
    put:
      consumes:
      - application/json
      description: Method generate user vault token for vlid vault approle by curent
        group
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/go_vault.VaultUser'
      - description: grope name for generate token
        in: query
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
      summary: Generate user vault token for curent group
      tags:
      - vault
  /vault/api/v1/getAppRoles:
    get:
      consumes:
      - application/json
      description: Method for get all existing vault approles
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
      summary: Get Vault AppRoles
      tags:
      - vault
  /vault/api/v1/getValidRolesForUser:
    post:
      consumes:
      - application/json
      description: Method get all vlid vault approles for user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/go_vault.VaultUser'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/go_vault.JSONResult'
      summary: Get user approles
      tags:
      - vault
swagger: "2.0"
